<?php

// contents
//  contents
//  includes
//  hooks
//   menu
//   permission
//  custom_page_login
//  custom_form
//  custom_form_settings
//  _get_settings_variable
//  _login_action


require_once("page_data.inc");

// implements hook_menu
function illiad_sso_menu(){
 $menu_items = array();
 $keys = illiad_sso_custom_mvc("keys");
 foreach($keys as $key){
  $mvc = illiad_sso_custom_mvc($key);
  if(array_key_exists("menu", $mvc)){
   $menu = $mvc["menu"];
   $menu_items[$menu["path"]] = $menu["menu"];
  }
 }
 return $menu_items;
}

// implements hook_permission
function illiad_sso_permission(){
 $permissions = array();
 $keys = illiad_sso_custom_mvc("keys");
 foreach($keys as $key){
  $mvc = illiad_sso_custom_mvc($key);
  if(array_key_exists("permissions", $mvc)){
   foreach($mvc["permissions"] as $permission)
    $permissions[$permission["name"]] = $permission["item"];
  }
 }
 return $permissions;
}


// callback for the login page
function illiad_sso_custom_page_login(){
 global $user;
 global $illiad_sso_volatile_url;
 $module_name = "illiad_sso";
 $product_name = "ILLiad";

 $illiad_sso_volatile_url = "";
 if(!$user->uid){
  $illiad_sso_volatile_url = $_SERVER["REQUEST_URI"];
  $form = drupal_get_form("user_login");
  $illiad_sso_volatile_url = "";
  return $form;
 }

 $access_check = _illiad_sso_get_settings_variable("illiad_access permission");
 if(!user_access($access_check)){
  $error = t("You do not have permission to access " . $product_name);
  drupal_set_message($error, "error");
  return "";
 }

 $account = user_load($user->uid);
 $sooner_id_field_name = _illiad_sso_get_settings_variable("sooner_id profile_field name");
 $sooner_id_field = field_get_items("user", $account, $sooner_id_field_name);
 $sooner_id = "";
 if($sooner_id_field)
  if(array_key_exists(0, $sooner_id_field))
   if(array_key_exists("value", $sooner_id_field[0]))
    $sooner_id = $sooner_id_field[0]["value"];
 if(!$sooner_id){
  drupal_set_message(t("User Verification"), "warning");
  $message = t("To use InterLibrary Loan, the system needs to perform a one-time verification using your Sooner ID.  This information can be found on the student or faculty/staff ID card assigned to you.");
  drupal_set_message($message, "warning");
  $illiad_sso_volatile_url = $_SERVER["REQUEST_URI"];
  $form = drupal_get_form("illiad_sso_custom_form_sooner_id");
  $illiad_sso_volatile_url = "";
  return $form;
 }

 $ounetid = $user->name;

 $secret = _illiad_sso_get_settings_variable("sso secret");
 $password = $sooner_id * 4 + $secret; # wow

 $login_form_action = _illiad_sso_login_action();

 $form_name = "frmLogon";
 $submit_button_name = "SubmitButton";
 $form_attributes = array(
  "name" => $form_name,
  "method" => "POST",
  "action" => $login_form_action
 );

 $form_open_tag = array(array("#markup" => "<form"));
 foreach($form_attributes as $k => $v){
  $markup = " " . $k . "=\"" . htmlspecialchars($v) . "\"";
  $form_open_tag[] = array("#markup" => $markup);
 }
 $form_open_tag[] = array("#markup" => ">\n");

 $fields = array(
  "ILLiadForm" => array("hidden", "Logon"),
  "Username" => array("hidden", $ounetid),
  "Password" => array("hidden", $password),
  $submit_button_name => array("submit", "Logon to " . $product_name)
 );
 $form = array(); // TODO: build a form instead
 $form[] = $form_open_tag;
 foreach($fields as $name => $field){
  $type = $field[0];
  $value = $field[1];
  $markup = "<input type=\"" . $type . "\" name=\"" . $name . "\" value=\"" . htmlspecialchars($value) . "\">";
  $form[] = array("#markup" => " " . $markup . "\n");
 }
 $form[] = array("#markup" => "</form>\n");
 $script = "document." . $form_name . "." . $submit_button_name . ".click();";
 $script_tag = array(
  array("#markup"=>"<script>\n"),
  array("#markup"=>" " . $script . "\n"),
  array("#markup"=>"</script>\n")
 );
 return array(
  $form,
  $script_tag
 );
}

// helper for form_alter
function illiad_sso_custom_form_alter_redirect_url(&$form){
 global $illiad_sso_volatile_url;
 if(!$illiad_sso_volatile_url) return;
 $form["illiad_sso_redirect_url"] = array(
  "#type" => "hidden",
  "#value" => $illiad_sso_volatile_url
 );
 $illiad_sso_volatile_url = "";
}

// implements hook_form_alter
function illiad_sso_form_alter(&$form, &$form_state, $form_id){
 $target_forms = array(
  "user_login",
  "illiad_sso_custom_form_sooner_id"
 );
 if("illiad_login" != current_path())
  return;
 if(!in_array($form_id, $target_forms))
  return;
 illiad_sso_custom_form_alter_redirect_url($form);
}

// implements hook_user_login
function illiad_sso_user_login(&$edit, $account){
 $values = $edit["values"];
 if(empty($values["illiad_sso_redirect_url"])) return;
 if(!$account->uid) return; // how does this state happen?
 $url = $values["illiad_sso_redirect_url"];
 header("Location: " . $url);
 exit();
}

// a helper for forms nestled in the above custom false-"mvc" format
function illiad_sso_custom_form($name, $values=NULL, $omit_prefix=FALSE){
 $module_name = "illiad_sso";
 $mvc = illiad_sso_custom_mvc($name);
 $form_data = $mvc["form"];
 $form = array();
 foreach($form_data["fields"] as $field_data){
  $prefix = $omit_prefix ? "" : $module_name . "_";
  $field_name = $prefix . $field_data["field_name"];
  $field = $field_data["field"];
  if(isset($values) && array_key_exists($field_data["field_name"], $values))
   $field["value"] = $values[$field_data["field_name"]];
  else{
   $fallback_value = $field_data["default"];
   $default_variable = $field_name;
   $default_value = variable_get($default_variable, $fallback_value);
   $field["#default_value"] = $default_value;
  }
  $form[$field_name] = $field;
 }
 return $form;
}

// form builder for settings page
function illiad_sso_custom_form_settings(){
 return system_settings_form(illiad_sso_custom_form("settings"));
}

// form builder for missing Sooner ID on redirect page
function illiad_sso_custom_form_sooner_id(){
 return array(
  "sooner_id" => array(
   // TODO: validate (lol)
   "#type" => "textfield",
   "#title" => t("Sooner ID"),
   "#description" => t("For help finding this information, please contact the Sooner Card Office at <a href=\"mailto:soonercard@ou.edu\">soonercard@ou.edu</a> or <a href=\"tel:+14053253113\">(405)-325-3113</a>."),
   "#required" => TRUE
  ),
  "buttons" => array(
   "submit" => array(
    "#type" => "submit",
    "#value" => t("Set your Sooner ID")
   )
  ),
  "#submit" => array("illiad_sso_custom_submit_form_sooner_id")
 );
}
function illiad_sso_custom_submit_form_sooner_id($form, &$form_state){
 global $user;
 $product_name = "ILLiad";
 $sooner_id = $form_state["values"]["sooner_id"];
 $redirect_url = $form_state["values"]["illiad_sso_redirect_url"];

 $account = user_load($user->uid);
 $sooner_id_field_name = _illiad_sso_get_settings_variable("sooner_id profile_field name");

 $sooner_id_field = field_get_items("user", $account, $sooner_id_field_name);
 if($sooner_id_field)
  if(array_key_exists(0, $sooner_id_field))
   if(array_key_exists("value", $sooner_id_field[0]))
    if($sooner_id_field[0]["value"]){
     drupal_set_message("Your Sooner ID was already set.", "warning");
     return;
    }

 $edit = array();
 $edit[$sooner_id_field_name] = array("und" => array(array("value" => $sooner_id)));
 user_save($account, $edit);

 header("Location: " . $redirect_url);
 exit();
}

// a helper for using the variables stored by the settings form
function _illiad_sso_get_settings_variable($varname){
 $module_name = "illiad_sso";
 $settings = illiad_sso_custom_mvc("settings");
 $form = $settings["form"];
 $names_to_index = array_flip(
  array(
   "sooner_id profile_field name",
   "illiad_access permission",
   "illiad url",
   "sso secret"
  )
 );
 $index = $names_to_index[$varname];
 $field_data = $form["fields"][$index];
 $variable = $module_name . "_" . $field_data["field_name"];
 $fallback = $field_data["default"];
 return variable_get($variable, $fallback);
}

// a helper for determining the "action" URL of the ILLiad login form
function _illiad_sso_login_action(){
 $querystring = $_SERVER["QUERY_STRING"];
 $url = _illiad_sso_get_settings_variable("illiad url");
 if(!$querystring) return $url;
 $task = "";
 if(array_key_exists("task", $_GET))
  $task = $_GET["task"];

 if("tulsapass" == $task) return $url;

 $replacements = array();
 foreach(array("title", "jtitle", "stitle", "au") as $k)
  $replacements["&rft." . $k . "=&"] = "&";

 $value = "GenericRequestSoonerLoan";

 $loan = "sxloan";
 if($loan == $task)
  $replacements["genre=book"] = "genre=" . $loan;
 else{
  if("sxcopy" == $task){
   if(array_key_exists("rft.genre", $_GET) && "book" == $_GET["rft.genre"]){
    $replacements["genre=book"] = "genre=" . $loan;
   }
   else{
    foreach(array("article", "journal", "bookitem") as $genre)
     $replacements["genre=" . $genre] = "genre=sxarticle";
    $value = "GenericRequestSoonerArticle";
   }
  }
  else{
   foreach(array("isbn", "issn") as $k)
    $replacements["&" . $k . "=&"] = "&";
   $atitle = "";
   if(array_key_exists("rft.atitle", $_GET))
    $atitle = $_GET["rft.atitle"];
   if(!$atitle)
    foreach(array("unknown", "issue") as $genre)
     $replacements["&rft.genre=" . $genre] = "&rft.genre=article";
   foreach(array(":", "%3A") as $colon)
    $replacements["prime.exlibrisgroup.com" . $colon] = "";
   $value = "";
  }
 }

 foreach($replacements as $k => $v)
  $querystring = str_replace($k, $v, $querystring);

 $value_param = $value ? "&Value=" . $value : "";
 return $url . "?Action=10&Form=30" . $value_param . "&" . $querystring;
}
